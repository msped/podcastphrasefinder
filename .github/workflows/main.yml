name: CI

on:
  pull_request:
    branches: ["main"]

jobs:
  CI:
    runs-on: ubuntu-latest
    environment: Django Test
    services:
      elasticsearch:
        image: elasticsearch:7.17.9
        ports:
          - "9200:9200"
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          YOUTUBE_V3_API_KEY: ${{ secrets.YOUTUBE_V3_API_KEY}}
        run: |
          coverage run manage.py test && coverage report --fail-under=90

  CD:
    runs-on: ubuntu-latest
    needs: CI
    if: ${{ github.ref == 'refs/heads/main' }}
    environment: Production
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 200m
          script: |
            cd ${{ secrets.FILE_PATH }}
            git pull
            docker-compose build --no-cache --compress
            docker-compose up -d
