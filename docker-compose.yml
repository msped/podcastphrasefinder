version: '3.10'
services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pod-backend
    restart: unless-stopped
    volumes:
      - static_volume:/backend/static
    ports:
      - "8000:8000"

  elasticsearch:
    container_name: pod-elastic
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    depends_on:
      - backend

  redis:
    restart: always
    image: redis:latest
    container_name: pod-redis
    volumes:
      - ./redis_data:/data

  celery:
    build: .
    container_name: pod-celery
    command: celery -A backend worker -l INFO
    volumes:
      - ./:usr/src/app
    env_file:
      - '.env'
    depends_on:
      - redis

  celery-beat:
    build: .
    user: root
    container_name: pod-celery-beat
    command: celery -A backend beat -l INFO
    volumes:
      - ./:/usr/src/app/
    env_file:
      - '.env'
    depends_on:
      - redis

  nginx:
    image: nginx:latest
    container_name: pod-nginx
    restart: always
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
        - static_volume:/var/www/backend/static
        - ./certbot/www:/var/www/certbot/:ro
        - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
        - backend
        - elasticsearch

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  static_volume:
  elasticsearch_data: